//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  doc: Doc;
  docConnection: DocConnection;
  post: Post;
  postConnection: PostConnection;
  homepage: Homepage;
  homepageConnection: HomepageConnection;
  pages: Pages;
  pagesConnection: PagesConnection;
  sidebar: Sidebar;
  sidebarConnection: SidebarConnection;
  settings: Settings;
  settingsConnection: SettingsConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryDocArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryDocConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocFilter>;
};


export type QueryPostArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPostConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
};


export type QueryHomepageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryHomepageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<HomepageFilter>;
};


export type QueryPagesArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPagesConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PagesFilter>;
};


export type QuerySidebarArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QuerySidebarConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<SidebarFilter>;
};


export type QuerySettingsArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QuerySettingsConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<SettingsFilter>;
};

export type DocumentFilter = {
  doc?: InputMaybe<DocFilter>;
  post?: InputMaybe<PostFilter>;
  homepage?: InputMaybe<HomepageFilter>;
  pages?: InputMaybe<PagesFilter>;
  sidebar?: InputMaybe<SidebarFilter>;
  settings?: InputMaybe<SettingsFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = Doc | Post | Homepage | Pages | Sidebar | Settings;

export type Doc = Node & Document & {
  __typename?: 'Doc';
  title: Scalars['String'];
  description?: Maybe<Scalars['String']>;
  tags?: Maybe<Array<Maybe<Scalars['String']>>>;
  body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type DocBodyAdmonitionFilter = {
  type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type DocBodyDetailsFilter = {
  summary?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type DocBodyCodeBlockFilter = {
  title?: InputMaybe<StringFilter>;
  language?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type PostBodyTabsChildrenTabItemFilter = {
  label?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringFilter>;
  children?: InputMaybe<StringFilter>;
};

export type DocBodyTabsChildrenFilter = {
  TabItem?: InputMaybe<PostBodyTabsChildrenTabItemFilter>;
};

export type DocBodyTabsFilter = {
  children?: InputMaybe<DocBodyTabsChildrenFilter>;
};

export type DocBodyDocCardListFilter = {
  title?: InputMaybe<StringFilter>;
};

export type DocBodyFilter = {
  Admonition?: InputMaybe<DocBodyAdmonitionFilter>;
  Details?: InputMaybe<DocBodyDetailsFilter>;
  CodeBlock?: InputMaybe<DocBodyCodeBlockFilter>;
  Tabs?: InputMaybe<DocBodyTabsFilter>;
  DocCardList?: InputMaybe<DocBodyDocCardListFilter>;
};

export type DocFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  tags?: InputMaybe<StringFilter>;
  body?: InputMaybe<DocBodyFilter>;
};

export type DocConnectionEdges = {
  __typename?: 'DocConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Doc>;
};

export type DocConnection = Connection & {
  __typename?: 'DocConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocConnectionEdges>>>;
};

export type PostAuthors = {
  __typename?: 'PostAuthors';
  name: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  image_url?: Maybe<Scalars['String']>;
};

export type Post = Node & Document & {
  __typename?: 'Post';
  title: Scalars['String'];
  authors?: Maybe<Array<Maybe<PostAuthors>>>;
  date: Scalars['String'];
  tags?: Maybe<Array<Maybe<Scalars['String']>>>;
  body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PostAuthorsFilter = {
  name?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
  image_url?: InputMaybe<StringFilter>;
};

export type PostBodyAdmonitionFilter = {
  type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type PostBodyDetailsFilter = {
  summary?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type PostBodyCodeBlockFilter = {
  title?: InputMaybe<StringFilter>;
  language?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type PagesBodyTabsChildrenTabItemFilter = {
  label?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringFilter>;
  children?: InputMaybe<StringFilter>;
};

export type PostBodyTabsChildrenFilter = {
  TabItem?: InputMaybe<PagesBodyTabsChildrenTabItemFilter>;
};

export type PostBodyTabsFilter = {
  children?: InputMaybe<PostBodyTabsChildrenFilter>;
};

export type PostBodyDocCardListFilter = {
  title?: InputMaybe<StringFilter>;
};

export type PostBodyFilter = {
  Admonition?: InputMaybe<PostBodyAdmonitionFilter>;
  Details?: InputMaybe<PostBodyDetailsFilter>;
  CodeBlock?: InputMaybe<PostBodyCodeBlockFilter>;
  Tabs?: InputMaybe<PostBodyTabsFilter>;
  DocCardList?: InputMaybe<PostBodyDocCardListFilter>;
};

export type PostFilter = {
  title?: InputMaybe<StringFilter>;
  authors?: InputMaybe<PostAuthorsFilter>;
  date?: InputMaybe<StringFilter>;
  tags?: InputMaybe<StringFilter>;
  body?: InputMaybe<PostBodyFilter>;
};

export type PostConnectionEdges = {
  __typename?: 'PostConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Post>;
};

export type PostConnection = Connection & {
  __typename?: 'PostConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PostConnectionEdges>>>;
};

export type HomepageBlocksHeroDocument = Doc;

export type HomepageBlocksHero = {
  __typename?: 'HomepageBlocksHero';
  title?: Maybe<Scalars['String']>;
  subtitle?: Maybe<Scalars['String']>;
  document?: Maybe<HomepageBlocksHeroDocument>;
  documentLabel?: Maybe<Scalars['String']>;
};

export type HomepageBlocksFeaturesItems = {
  __typename?: 'HomepageBlocksFeaturesItems';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['JSON']>;
  image?: Maybe<Scalars['String']>;
};

export type HomepageBlocksFeatures = {
  __typename?: 'HomepageBlocksFeatures';
  items?: Maybe<Array<Maybe<HomepageBlocksFeaturesItems>>>;
};

export type HomepageBlocks = HomepageBlocksHero | HomepageBlocksFeatures;

export type Homepage = Node & Document & {
  __typename?: 'Homepage';
  _warning?: Maybe<Scalars['String']>;
  label: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  blocks?: Maybe<Array<Maybe<HomepageBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type HomepageBlocksHeroDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type HomepageBlocksHeroFilter = {
  title?: InputMaybe<StringFilter>;
  subtitle?: InputMaybe<StringFilter>;
  document?: InputMaybe<HomepageBlocksHeroDocumentFilter>;
  documentLabel?: InputMaybe<StringFilter>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type HomepageBlocksFeaturesItemsFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type HomepageBlocksFeaturesFilter = {
  items?: InputMaybe<HomepageBlocksFeaturesItemsFilter>;
};

export type HomepageBlocksFilter = {
  hero?: InputMaybe<HomepageBlocksHeroFilter>;
  features?: InputMaybe<HomepageBlocksFeaturesFilter>;
};

export type HomepageFilter = {
  _warning?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  blocks?: InputMaybe<HomepageBlocksFilter>;
};

export type HomepageConnectionEdges = {
  __typename?: 'HomepageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Homepage>;
};

export type HomepageConnection = Connection & {
  __typename?: 'HomepageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<HomepageConnectionEdges>>>;
};

export type Pages = Node & Document & {
  __typename?: 'Pages';
  title: Scalars['String'];
  description?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PagesBodyAdmonitionFilter = {
  type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type PagesBodyDetailsFilter = {
  summary?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type PagesBodyCodeBlockFilter = {
  title?: InputMaybe<StringFilter>;
  language?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type PagesBodyTabsChildrenFilter = {
  TabItem?: InputMaybe<PagesBodyTabsChildrenTabItemFilter>;
};

export type PagesBodyTabsFilter = {
  children?: InputMaybe<PagesBodyTabsChildrenFilter>;
};

export type PagesBodyDocCardListFilter = {
  title?: InputMaybe<StringFilter>;
};

export type PagesBodyFilter = {
  Admonition?: InputMaybe<PagesBodyAdmonitionFilter>;
  Details?: InputMaybe<PagesBodyDetailsFilter>;
  CodeBlock?: InputMaybe<PagesBodyCodeBlockFilter>;
  Tabs?: InputMaybe<PagesBodyTabsFilter>;
  DocCardList?: InputMaybe<PagesBodyDocCardListFilter>;
};

export type PagesFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  body?: InputMaybe<PagesBodyFilter>;
};

export type PagesConnectionEdges = {
  __typename?: 'PagesConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Pages>;
};

export type PagesConnection = Connection & {
  __typename?: 'PagesConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PagesConnectionEdges>>>;
};

export type SidebarItemsCategoryDocLink = Doc;

export type SidebarItemsCategoryItemsCategoryDocLink = Doc;

export type SidebarItemsCategoryItemsCategoryItemsCategoryDocLink = Doc;

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocDocument = Doc;

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsDoc = {
  __typename?: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsDoc';
  document: SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocDocument;
  label?: Maybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsLink = {
  __typename?: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsLink';
  title: Scalars['String'];
  href: Scalars['String'];
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItems = SidebarItemsCategoryItemsCategoryItemsCategoryItemsDoc | SidebarItemsCategoryItemsCategoryItemsCategoryItemsLink;

export type SidebarItemsCategoryItemsCategoryItemsCategory = {
  __typename?: 'SidebarItemsCategoryItemsCategoryItemsCategory';
  title: Scalars['String'];
  link?: Maybe<Scalars['String']>;
  docLink?: Maybe<SidebarItemsCategoryItemsCategoryItemsCategoryDocLink>;
  items?: Maybe<Array<Maybe<SidebarItemsCategoryItemsCategoryItemsCategoryItems>>>;
};

export type SidebarItemsCategoryItemsCategoryItemsDocDocument = Doc;

export type SidebarItemsCategoryItemsCategoryItemsDoc = {
  __typename?: 'SidebarItemsCategoryItemsCategoryItemsDoc';
  document: SidebarItemsCategoryItemsCategoryItemsDocDocument;
  label?: Maybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsCategoryItemsLink = {
  __typename?: 'SidebarItemsCategoryItemsCategoryItemsLink';
  title: Scalars['String'];
  href: Scalars['String'];
};

export type SidebarItemsCategoryItemsCategoryItems = SidebarItemsCategoryItemsCategoryItemsCategory | SidebarItemsCategoryItemsCategoryItemsDoc | SidebarItemsCategoryItemsCategoryItemsLink;

export type SidebarItemsCategoryItemsCategory = {
  __typename?: 'SidebarItemsCategoryItemsCategory';
  title: Scalars['String'];
  link?: Maybe<Scalars['String']>;
  docLink?: Maybe<SidebarItemsCategoryItemsCategoryDocLink>;
  items?: Maybe<Array<Maybe<SidebarItemsCategoryItemsCategoryItems>>>;
};

export type SidebarItemsCategoryItemsDocDocument = Doc;

export type SidebarItemsCategoryItemsDoc = {
  __typename?: 'SidebarItemsCategoryItemsDoc';
  document: SidebarItemsCategoryItemsDocDocument;
  label?: Maybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsLink = {
  __typename?: 'SidebarItemsCategoryItemsLink';
  title: Scalars['String'];
  href: Scalars['String'];
};

export type SidebarItemsCategoryItems = SidebarItemsCategoryItemsCategory | SidebarItemsCategoryItemsDoc | SidebarItemsCategoryItemsLink;

export type SidebarItemsCategory = {
  __typename?: 'SidebarItemsCategory';
  title: Scalars['String'];
  link?: Maybe<Scalars['String']>;
  docLink?: Maybe<SidebarItemsCategoryDocLink>;
  items?: Maybe<Array<Maybe<SidebarItemsCategoryItems>>>;
};

export type SidebarItemsDocDocument = Doc;

export type SidebarItemsDoc = {
  __typename?: 'SidebarItemsDoc';
  document: SidebarItemsDocDocument;
  label?: Maybe<Scalars['String']>;
};

export type SidebarItemsLink = {
  __typename?: 'SidebarItemsLink';
  title: Scalars['String'];
  href: Scalars['String'];
};

export type SidebarItems = SidebarItemsCategory | SidebarItemsDoc | SidebarItemsLink;

export type Sidebar = Node & Document & {
  __typename?: 'Sidebar';
  _warning?: Maybe<Scalars['String']>;
  label: Scalars['String'];
  items?: Maybe<Array<Maybe<SidebarItems>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type SidebarItemsCategoryDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsCategoryItemsCategoryDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocFilter = {
  document?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsFilter = {
  doc?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocFilter>;
  link?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryItemsLinkFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryDocLinkFilter>;
  items?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryItemsFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsDocFilter = {
  document?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsCategoryItemsCategoryItemsFilter = {
  category?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryFilter>;
  doc?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsDocFilter>;
  link?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsLinkFilter>;
};

export type SidebarItemsCategoryItemsCategoryFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SidebarItemsCategoryItemsCategoryDocLinkFilter>;
  items?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsFilter>;
};

export type SidebarItemsCategoryItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsCategoryItemsDocFilter = {
  document?: InputMaybe<SidebarItemsCategoryItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsCategoryItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsCategoryItemsFilter = {
  category?: InputMaybe<SidebarItemsCategoryItemsCategoryFilter>;
  doc?: InputMaybe<SidebarItemsCategoryItemsDocFilter>;
  link?: InputMaybe<SidebarItemsCategoryItemsLinkFilter>;
};

export type SidebarItemsCategoryFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SidebarItemsCategoryDocLinkFilter>;
  items?: InputMaybe<SidebarItemsCategoryItemsFilter>;
};

export type SidebarItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsDocFilter = {
  document?: InputMaybe<SidebarItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsFilter = {
  category?: InputMaybe<SidebarItemsCategoryFilter>;
  doc?: InputMaybe<SidebarItemsDocFilter>;
  link?: InputMaybe<SidebarItemsLinkFilter>;
};

export type SidebarFilter = {
  _warning?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  items?: InputMaybe<SidebarItemsFilter>;
};

export type SidebarConnectionEdges = {
  __typename?: 'SidebarConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Sidebar>;
};

export type SidebarConnection = Connection & {
  __typename?: 'SidebarConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<SidebarConnectionEdges>>>;
};

export type SettingsLogo = {
  __typename?: 'SettingsLogo';
  alt?: Maybe<Scalars['String']>;
  src?: Maybe<Scalars['String']>;
};

export type SettingsNavbarDocLink = Doc;

export type SettingsNavbarPageLink = Pages;

export type SettingsNavbarItemsDocLink = Doc;

export type SettingsNavbarItemsPageLink = Pages;

export type SettingsNavbarItemsItemsDocLink = Doc;

export type SettingsNavbarItemsItemsPageLink = Pages;

export type SettingsNavbarItemsItems = {
  __typename?: 'SettingsNavbarItemsItems';
  label: Scalars['String'];
  link?: Maybe<Scalars['String']>;
  docLink?: Maybe<SettingsNavbarItemsItemsDocLink>;
  pageLink?: Maybe<SettingsNavbarItemsItemsPageLink>;
  externalLink?: Maybe<Scalars['String']>;
  position: Scalars['String'];
};

export type SettingsNavbarItems = {
  __typename?: 'SettingsNavbarItems';
  label: Scalars['String'];
  link?: Maybe<Scalars['String']>;
  docLink?: Maybe<SettingsNavbarItemsDocLink>;
  pageLink?: Maybe<SettingsNavbarItemsPageLink>;
  externalLink?: Maybe<Scalars['String']>;
  position: Scalars['String'];
  items?: Maybe<Array<Maybe<SettingsNavbarItemsItems>>>;
};

export type SettingsNavbar = {
  __typename?: 'SettingsNavbar';
  label: Scalars['String'];
  link?: Maybe<Scalars['String']>;
  docLink?: Maybe<SettingsNavbarDocLink>;
  pageLink?: Maybe<SettingsNavbarPageLink>;
  externalLink?: Maybe<Scalars['String']>;
  position: Scalars['String'];
  items?: Maybe<Array<Maybe<SettingsNavbarItems>>>;
};

export type SettingsFooterLinksItemsInternalTo = Doc | Post | Pages;

export type SettingsFooterLinksItemsInternal = {
  __typename?: 'SettingsFooterLinksItemsInternal';
  label?: Maybe<Scalars['String']>;
  to?: Maybe<SettingsFooterLinksItemsInternalTo>;
};

export type SettingsFooterLinksItemsBlog = {
  __typename?: 'SettingsFooterLinksItemsBlog';
  label?: Maybe<Scalars['String']>;
};

export type SettingsFooterLinksItemsExternal = {
  __typename?: 'SettingsFooterLinksItemsExternal';
  label?: Maybe<Scalars['String']>;
  href?: Maybe<Scalars['String']>;
};

export type SettingsFooterLinksItems = SettingsFooterLinksItemsInternal | SettingsFooterLinksItemsBlog | SettingsFooterLinksItemsExternal;

export type SettingsFooterLinks = {
  __typename?: 'SettingsFooterLinks';
  title?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<SettingsFooterLinksItems>>>;
};

export type SettingsFooter = {
  __typename?: 'SettingsFooter';
  style?: Maybe<Scalars['String']>;
  links?: Maybe<Array<Maybe<SettingsFooterLinks>>>;
  copyright?: Maybe<Scalars['String']>;
};

export type Settings = Node & Document & {
  __typename?: 'Settings';
  _warning?: Maybe<Scalars['String']>;
  label: Scalars['String'];
  logo?: Maybe<SettingsLogo>;
  title: Scalars['String'];
  tagline?: Maybe<Scalars['String']>;
  url: Scalars['String'];
  navbar?: Maybe<Array<Maybe<SettingsNavbar>>>;
  footer?: Maybe<SettingsFooter>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type SettingsLogoFilter = {
  alt?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
};

export type SettingsNavbarDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SettingsNavbarPageLinkFilter = {
  pages?: InputMaybe<PagesFilter>;
};

export type SettingsNavbarItemsDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SettingsNavbarItemsPageLinkFilter = {
  pages?: InputMaybe<PagesFilter>;
};

export type SettingsNavbarItemsItemsDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SettingsNavbarItemsItemsPageLinkFilter = {
  pages?: InputMaybe<PagesFilter>;
};

export type SettingsNavbarItemsItemsFilter = {
  label?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SettingsNavbarItemsItemsDocLinkFilter>;
  pageLink?: InputMaybe<SettingsNavbarItemsItemsPageLinkFilter>;
  externalLink?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
};

export type SettingsNavbarItemsFilter = {
  label?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SettingsNavbarItemsDocLinkFilter>;
  pageLink?: InputMaybe<SettingsNavbarItemsPageLinkFilter>;
  externalLink?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
  items?: InputMaybe<SettingsNavbarItemsItemsFilter>;
};

export type SettingsNavbarFilter = {
  label?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SettingsNavbarDocLinkFilter>;
  pageLink?: InputMaybe<SettingsNavbarPageLinkFilter>;
  externalLink?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
  items?: InputMaybe<SettingsNavbarItemsFilter>;
};

export type SettingsFooterLinksItemsInternalToFilter = {
  doc?: InputMaybe<DocFilter>;
  post?: InputMaybe<PostFilter>;
  pages?: InputMaybe<PagesFilter>;
};

export type SettingsFooterLinksItemsInternalFilter = {
  label?: InputMaybe<StringFilter>;
  to?: InputMaybe<SettingsFooterLinksItemsInternalToFilter>;
};

export type SettingsFooterLinksItemsBlogFilter = {
  label?: InputMaybe<StringFilter>;
};

export type SettingsFooterLinksItemsExternalFilter = {
  label?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SettingsFooterLinksItemsFilter = {
  internal?: InputMaybe<SettingsFooterLinksItemsInternalFilter>;
  blog?: InputMaybe<SettingsFooterLinksItemsBlogFilter>;
  external?: InputMaybe<SettingsFooterLinksItemsExternalFilter>;
};

export type SettingsFooterLinksFilter = {
  title?: InputMaybe<StringFilter>;
  items?: InputMaybe<SettingsFooterLinksItemsFilter>;
};

export type SettingsFooterFilter = {
  style?: InputMaybe<StringFilter>;
  links?: InputMaybe<SettingsFooterLinksFilter>;
  copyright?: InputMaybe<StringFilter>;
};

export type SettingsFilter = {
  _warning?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  logo?: InputMaybe<SettingsLogoFilter>;
  title?: InputMaybe<StringFilter>;
  tagline?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
  navbar?: InputMaybe<SettingsNavbarFilter>;
  footer?: InputMaybe<SettingsFooterFilter>;
};

export type SettingsConnectionEdges = {
  __typename?: 'SettingsConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Settings>;
};

export type SettingsConnection = Connection & {
  __typename?: 'SettingsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<SettingsConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updateDoc: Doc;
  createDoc: Doc;
  updatePost: Post;
  createPost: Post;
  updateHomepage: Homepage;
  createHomepage: Homepage;
  updatePages: Pages;
  createPages: Pages;
  updateSidebar: Sidebar;
  createSidebar: Sidebar;
  updateSettings: Settings;
  createSettings: Settings;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateDocArgs = {
  relativePath: Scalars['String'];
  params: DocMutation;
};


export type MutationCreateDocArgs = {
  relativePath: Scalars['String'];
  params: DocMutation;
};


export type MutationUpdatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationCreatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationUpdateHomepageArgs = {
  relativePath: Scalars['String'];
  params: HomepageMutation;
};


export type MutationCreateHomepageArgs = {
  relativePath: Scalars['String'];
  params: HomepageMutation;
};


export type MutationUpdatePagesArgs = {
  relativePath: Scalars['String'];
  params: PagesMutation;
};


export type MutationCreatePagesArgs = {
  relativePath: Scalars['String'];
  params: PagesMutation;
};


export type MutationUpdateSidebarArgs = {
  relativePath: Scalars['String'];
  params: SidebarMutation;
};


export type MutationCreateSidebarArgs = {
  relativePath: Scalars['String'];
  params: SidebarMutation;
};


export type MutationUpdateSettingsArgs = {
  relativePath: Scalars['String'];
  params: SettingsMutation;
};


export type MutationCreateSettingsArgs = {
  relativePath: Scalars['String'];
  params: SettingsMutation;
};

export type DocumentUpdateMutation = {
  doc?: InputMaybe<DocMutation>;
  post?: InputMaybe<PostMutation>;
  homepage?: InputMaybe<HomepageMutation>;
  pages?: InputMaybe<PagesMutation>;
  sidebar?: InputMaybe<SidebarMutation>;
  settings?: InputMaybe<SettingsMutation>;
  relativePath?: InputMaybe<Scalars['String']>;
};

export type DocumentMutation = {
  doc?: InputMaybe<DocMutation>;
  post?: InputMaybe<PostMutation>;
  homepage?: InputMaybe<HomepageMutation>;
  pages?: InputMaybe<PagesMutation>;
  sidebar?: InputMaybe<SidebarMutation>;
  settings?: InputMaybe<SettingsMutation>;
};

export type DocMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type PostAuthorsMutation = {
  name?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  image_url?: InputMaybe<Scalars['String']>;
};

export type PostMutation = {
  title?: InputMaybe<Scalars['String']>;
  authors?: InputMaybe<Array<InputMaybe<PostAuthorsMutation>>>;
  date?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type HomepageBlocksHeroMutation = {
  title?: InputMaybe<Scalars['String']>;
  subtitle?: InputMaybe<Scalars['String']>;
  document?: InputMaybe<Scalars['String']>;
  documentLabel?: InputMaybe<Scalars['String']>;
};

export type HomepageBlocksFeaturesItemsMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  image?: InputMaybe<Scalars['String']>;
};

export type HomepageBlocksFeaturesMutation = {
  items?: InputMaybe<Array<InputMaybe<HomepageBlocksFeaturesItemsMutation>>>;
};

export type HomepageBlocksMutation = {
  hero?: InputMaybe<HomepageBlocksHeroMutation>;
  features?: InputMaybe<HomepageBlocksFeaturesMutation>;
};

export type HomepageMutation = {
  _warning?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  blocks?: InputMaybe<Array<InputMaybe<HomepageBlocksMutation>>>;
};

export type PagesMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocMutation = {
  document?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryItemsMutation = {
  doc?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryItemsDocMutation>;
  link?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryItemsLinkMutation>;
};

export type SidebarItemsCategoryItemsCategoryItemsCategoryMutation = {
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  docLink?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryItemsMutation>>>;
};

export type SidebarItemsCategoryItemsCategoryItemsDocMutation = {
  document?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsCategoryItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsCategoryItemsMutation = {
  category?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsCategoryMutation>;
  doc?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsDocMutation>;
  link?: InputMaybe<SidebarItemsCategoryItemsCategoryItemsLinkMutation>;
};

export type SidebarItemsCategoryItemsCategoryMutation = {
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  docLink?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsCategoryItemsCategoryItemsMutation>>>;
};

export type SidebarItemsCategoryItemsDocMutation = {
  document?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsCategoryItemsMutation = {
  category?: InputMaybe<SidebarItemsCategoryItemsCategoryMutation>;
  doc?: InputMaybe<SidebarItemsCategoryItemsDocMutation>;
  link?: InputMaybe<SidebarItemsCategoryItemsLinkMutation>;
};

export type SidebarItemsCategoryMutation = {
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  docLink?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsCategoryItemsMutation>>>;
};

export type SidebarItemsDocMutation = {
  document?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type SidebarItemsMutation = {
  category?: InputMaybe<SidebarItemsCategoryMutation>;
  doc?: InputMaybe<SidebarItemsDocMutation>;
  link?: InputMaybe<SidebarItemsLinkMutation>;
};

export type SidebarMutation = {
  _warning?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsMutation>>>;
};

export type SettingsLogoMutation = {
  alt?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
};

export type SettingsNavbarItemsItemsMutation = {
  label?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  docLink?: InputMaybe<Scalars['String']>;
  pageLink?: InputMaybe<Scalars['String']>;
  externalLink?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
};

export type SettingsNavbarItemsMutation = {
  label?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  docLink?: InputMaybe<Scalars['String']>;
  pageLink?: InputMaybe<Scalars['String']>;
  externalLink?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<SettingsNavbarItemsItemsMutation>>>;
};

export type SettingsNavbarMutation = {
  label?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  docLink?: InputMaybe<Scalars['String']>;
  pageLink?: InputMaybe<Scalars['String']>;
  externalLink?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<SettingsNavbarItemsMutation>>>;
};

export type SettingsFooterLinksItemsInternalMutation = {
  label?: InputMaybe<Scalars['String']>;
  to?: InputMaybe<Scalars['String']>;
};

export type SettingsFooterLinksItemsBlogMutation = {
  label?: InputMaybe<Scalars['String']>;
};

export type SettingsFooterLinksItemsExternalMutation = {
  label?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type SettingsFooterLinksItemsMutation = {
  internal?: InputMaybe<SettingsFooterLinksItemsInternalMutation>;
  blog?: InputMaybe<SettingsFooterLinksItemsBlogMutation>;
  external?: InputMaybe<SettingsFooterLinksItemsExternalMutation>;
};

export type SettingsFooterLinksMutation = {
  title?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<SettingsFooterLinksItemsMutation>>>;
};

export type SettingsFooterMutation = {
  style?: InputMaybe<Scalars['String']>;
  links?: InputMaybe<Array<InputMaybe<SettingsFooterLinksMutation>>>;
  copyright?: InputMaybe<Scalars['String']>;
};

export type SettingsMutation = {
  _warning?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  logo?: InputMaybe<SettingsLogoMutation>;
  title?: InputMaybe<Scalars['String']>;
  tagline?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  navbar?: InputMaybe<Array<InputMaybe<SettingsNavbarMutation>>>;
  footer?: InputMaybe<SettingsFooterMutation>;
};

export type DocPartsFragment = { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null };

export type PostPartsFragment = { __typename?: 'Post', title: string, date: string, tags?: Array<string | null> | null, body?: any | null, authors?: Array<{ __typename: 'PostAuthors', name: string, title?: string | null, url?: string | null, image_url?: string | null } | null> | null };

export type HomepagePartsFragment = { __typename?: 'Homepage', _warning?: string | null, label: string, title?: string | null, description?: string | null, blocks?: Array<{ __typename: 'HomepageBlocksHero', title?: string | null, subtitle?: string | null, documentLabel?: string | null, document?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null } | { __typename: 'HomepageBlocksFeatures', items?: Array<{ __typename: 'HomepageBlocksFeaturesItems', title?: string | null, description?: any | null, image?: string | null } | null> | null } | null> | null };

export type PagesPartsFragment = { __typename?: 'Pages', title: string, description?: string | null, body?: any | null };

export type SidebarPartsFragment = { __typename?: 'Sidebar', _warning?: string | null, label: string, items?: Array<{ __typename: 'SidebarItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsLink', title: string, href: string } | null> | null };

export type SettingsPartsFragment = { __typename?: 'Settings', _warning?: string | null, label: string, title: string, tagline?: string | null, url: string, logo?: { __typename: 'SettingsLogo', alt?: string | null, src?: string | null } | null, navbar?: Array<{ __typename: 'SettingsNavbar', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SettingsNavbarItems', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SettingsNavbarItemsItems', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null } | null> | null } | null> | null } | null> | null, footer?: { __typename: 'SettingsFooter', style?: string | null, copyright?: string | null, links?: Array<{ __typename: 'SettingsFooterLinks', title?: string | null, items?: Array<{ __typename: 'SettingsFooterLinksItemsInternal', label?: string | null, to?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | { __typename?: 'Post', title: string, date: string, tags?: Array<string | null> | null, body?: any | null, id: string, authors?: Array<{ __typename: 'PostAuthors', name: string, title?: string | null, url?: string | null, image_url?: string | null } | null> | null } | { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null } | { __typename: 'SettingsFooterLinksItemsBlog', label?: string | null } | { __typename: 'SettingsFooterLinksItemsExternal', label?: string | null, href?: string | null } | null> | null } | null> | null } | null };

export type DocQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type DocQuery = { __typename?: 'Query', doc: { __typename?: 'Doc', id: string, title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type DocConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocFilter>;
}>;


export type DocConnectionQuery = { __typename?: 'Query', docConnection: { __typename?: 'DocConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'DocConnectionEdges', cursor: string, node?: { __typename?: 'Doc', id: string, title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type PostQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PostQuery = { __typename?: 'Query', post: { __typename?: 'Post', id: string, title: string, date: string, tags?: Array<string | null> | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, authors?: Array<{ __typename: 'PostAuthors', name: string, title?: string | null, url?: string | null, image_url?: string | null } | null> | null } };

export type PostConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
}>;


export type PostConnectionQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PostConnectionEdges', cursor: string, node?: { __typename?: 'Post', id: string, title: string, date: string, tags?: Array<string | null> | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, authors?: Array<{ __typename: 'PostAuthors', name: string, title?: string | null, url?: string | null, image_url?: string | null } | null> | null } | null } | null> | null } };

export type HomepageQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type HomepageQuery = { __typename?: 'Query', homepage: { __typename?: 'Homepage', id: string, _warning?: string | null, label: string, title?: string | null, description?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'HomepageBlocksHero', title?: string | null, subtitle?: string | null, documentLabel?: string | null, document?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null } | { __typename: 'HomepageBlocksFeatures', items?: Array<{ __typename: 'HomepageBlocksFeaturesItems', title?: string | null, description?: any | null, image?: string | null } | null> | null } | null> | null } };

export type HomepageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<HomepageFilter>;
}>;


export type HomepageConnectionQuery = { __typename?: 'Query', homepageConnection: { __typename?: 'HomepageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'HomepageConnectionEdges', cursor: string, node?: { __typename?: 'Homepage', id: string, _warning?: string | null, label: string, title?: string | null, description?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'HomepageBlocksHero', title?: string | null, subtitle?: string | null, documentLabel?: string | null, document?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null } | { __typename: 'HomepageBlocksFeatures', items?: Array<{ __typename: 'HomepageBlocksFeaturesItems', title?: string | null, description?: any | null, image?: string | null } | null> | null } | null> | null } | null } | null> | null } };

export type PagesQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PagesQuery = { __typename?: 'Query', pages: { __typename?: 'Pages', id: string, title: string, description?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type PagesConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PagesFilter>;
}>;


export type PagesConnectionQuery = { __typename?: 'Query', pagesConnection: { __typename?: 'PagesConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PagesConnectionEdges', cursor: string, node?: { __typename?: 'Pages', id: string, title: string, description?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type SidebarQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type SidebarQuery = { __typename?: 'Query', sidebar: { __typename?: 'Sidebar', id: string, _warning?: string | null, label: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, items?: Array<{ __typename: 'SidebarItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsLink', title: string, href: string } | null> | null } };

export type SidebarConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<SidebarFilter>;
}>;


export type SidebarConnectionQuery = { __typename?: 'Query', sidebarConnection: { __typename?: 'SidebarConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'SidebarConnectionEdges', cursor: string, node?: { __typename?: 'Sidebar', id: string, _warning?: string | null, label: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, items?: Array<{ __typename: 'SidebarItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsCategoryItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsDoc', label?: string | null, document: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } } | { __typename: 'SidebarItemsLink', title: string, href: string } | null> | null } | null } | null> | null } };

export type SettingsQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type SettingsQuery = { __typename?: 'Query', settings: { __typename?: 'Settings', id: string, _warning?: string | null, label: string, title: string, tagline?: string | null, url: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, logo?: { __typename: 'SettingsLogo', alt?: string | null, src?: string | null } | null, navbar?: Array<{ __typename: 'SettingsNavbar', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SettingsNavbarItems', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SettingsNavbarItemsItems', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null } | null> | null } | null> | null } | null> | null, footer?: { __typename: 'SettingsFooter', style?: string | null, copyright?: string | null, links?: Array<{ __typename: 'SettingsFooterLinks', title?: string | null, items?: Array<{ __typename: 'SettingsFooterLinksItemsInternal', label?: string | null, to?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | { __typename?: 'Post', title: string, date: string, tags?: Array<string | null> | null, body?: any | null, id: string, authors?: Array<{ __typename: 'PostAuthors', name: string, title?: string | null, url?: string | null, image_url?: string | null } | null> | null } | { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null } | { __typename: 'SettingsFooterLinksItemsBlog', label?: string | null } | { __typename: 'SettingsFooterLinksItemsExternal', label?: string | null, href?: string | null } | null> | null } | null> | null } | null } };

export type SettingsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<SettingsFilter>;
}>;


export type SettingsConnectionQuery = { __typename?: 'Query', settingsConnection: { __typename?: 'SettingsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'SettingsConnectionEdges', cursor: string, node?: { __typename?: 'Settings', id: string, _warning?: string | null, label: string, title: string, tagline?: string | null, url: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, logo?: { __typename: 'SettingsLogo', alt?: string | null, src?: string | null } | null, navbar?: Array<{ __typename: 'SettingsNavbar', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SettingsNavbarItems', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null, items?: Array<{ __typename: 'SettingsNavbarItemsItems', label: string, link?: string | null, externalLink?: string | null, position: string, docLink?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | null, pageLink?: { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null } | null> | null } | null> | null } | null> | null, footer?: { __typename: 'SettingsFooter', style?: string | null, copyright?: string | null, links?: Array<{ __typename: 'SettingsFooterLinks', title?: string | null, items?: Array<{ __typename: 'SettingsFooterLinksItemsInternal', label?: string | null, to?: { __typename?: 'Doc', title: string, description?: string | null, tags?: Array<string | null> | null, body?: any | null, id: string } | { __typename?: 'Post', title: string, date: string, tags?: Array<string | null> | null, body?: any | null, id: string, authors?: Array<{ __typename: 'PostAuthors', name: string, title?: string | null, url?: string | null, image_url?: string | null } | null> | null } | { __typename?: 'Pages', title: string, description?: string | null, body?: any | null, id: string } | null } | { __typename: 'SettingsFooterLinksItemsBlog', label?: string | null } | { __typename: 'SettingsFooterLinksItemsExternal', label?: string | null, href?: string | null } | null> | null } | null> | null } | null } | null } | null> | null } };

export const DocPartsFragmentDoc = gql`
    fragment DocParts on Doc {
  title
  description
  tags
  body
}
    `;
export const PostPartsFragmentDoc = gql`
    fragment PostParts on Post {
  title
  authors {
    __typename
    name
    title
    url
    image_url
  }
  date
  tags
  body
}
    `;
export const HomepagePartsFragmentDoc = gql`
    fragment HomepageParts on Homepage {
  _warning
  label
  title
  description
  blocks {
    __typename
    ... on HomepageBlocksHero {
      title
      subtitle
      document {
        ... on Doc {
          title
          description
          tags
          body
        }
        ... on Document {
          id
        }
      }
      documentLabel
    }
    ... on HomepageBlocksFeatures {
      items {
        __typename
        title
        description
        image
      }
    }
  }
}
    `;
export const PagesPartsFragmentDoc = gql`
    fragment PagesParts on Pages {
  title
  description
  body
}
    `;
export const SidebarPartsFragmentDoc = gql`
    fragment SidebarParts on Sidebar {
  _warning
  label
  items {
    __typename
    ... on SidebarItemsCategory {
      title
      link
      docLink {
        ... on Doc {
          title
          description
          tags
          body
        }
        ... on Document {
          id
        }
      }
      items {
        __typename
        ... on SidebarItemsCategoryItemsCategory {
          title
          link
          docLink {
            ... on Doc {
              title
              description
              tags
              body
            }
            ... on Document {
              id
            }
          }
          items {
            __typename
            ... on SidebarItemsCategoryItemsCategoryItemsCategory {
              title
              link
              docLink {
                ... on Doc {
                  title
                  description
                  tags
                  body
                }
                ... on Document {
                  id
                }
              }
              items {
                __typename
                ... on SidebarItemsCategoryItemsCategoryItemsCategoryItemsDoc {
                  document {
                    ... on Doc {
                      title
                      description
                      tags
                      body
                    }
                    ... on Document {
                      id
                    }
                  }
                  label
                }
                ... on SidebarItemsCategoryItemsCategoryItemsCategoryItemsLink {
                  title
                  href
                }
              }
            }
            ... on SidebarItemsCategoryItemsCategoryItemsDoc {
              document {
                ... on Doc {
                  title
                  description
                  tags
                  body
                }
                ... on Document {
                  id
                }
              }
              label
            }
            ... on SidebarItemsCategoryItemsCategoryItemsLink {
              title
              href
            }
          }
        }
        ... on SidebarItemsCategoryItemsDoc {
          document {
            ... on Doc {
              title
              description
              tags
              body
            }
            ... on Document {
              id
            }
          }
          label
        }
        ... on SidebarItemsCategoryItemsLink {
          title
          href
        }
      }
    }
    ... on SidebarItemsDoc {
      document {
        ... on Doc {
          title
          description
          tags
          body
        }
        ... on Document {
          id
        }
      }
      label
    }
    ... on SidebarItemsLink {
      title
      href
    }
  }
}
    `;
export const SettingsPartsFragmentDoc = gql`
    fragment SettingsParts on Settings {
  _warning
  label
  logo {
    __typename
    alt
    src
  }
  title
  tagline
  url
  navbar {
    __typename
    label
    link
    docLink {
      ... on Doc {
        title
        description
        tags
        body
      }
      ... on Document {
        id
      }
    }
    pageLink {
      ... on Pages {
        title
        description
        body
      }
      ... on Document {
        id
      }
    }
    externalLink
    position
    items {
      __typename
      label
      link
      docLink {
        ... on Doc {
          title
          description
          tags
          body
        }
        ... on Document {
          id
        }
      }
      pageLink {
        ... on Pages {
          title
          description
          body
        }
        ... on Document {
          id
        }
      }
      externalLink
      position
      items {
        __typename
        label
        link
        docLink {
          ... on Doc {
            title
            description
            tags
            body
          }
          ... on Document {
            id
          }
        }
        pageLink {
          ... on Pages {
            title
            description
            body
          }
          ... on Document {
            id
          }
        }
        externalLink
        position
      }
    }
  }
  footer {
    __typename
    style
    links {
      __typename
      title
      items {
        __typename
        ... on SettingsFooterLinksItemsInternal {
          label
          to {
            ... on Doc {
              title
              description
              tags
              body
            }
            ... on Pages {
              title
              description
              body
            }
            ... on Post {
              title
              authors {
                __typename
                name
                title
                url
                image_url
              }
              date
              tags
              body
            }
            ... on Document {
              id
            }
          }
        }
        ... on SettingsFooterLinksItemsBlog {
          label
        }
        ... on SettingsFooterLinksItemsExternal {
          label
          href
        }
      }
    }
    copyright
  }
}
    `;
export const DocDocument = gql`
    query doc($relativePath: String!) {
  doc(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...DocParts
  }
}
    ${DocPartsFragmentDoc}`;
export const DocConnectionDocument = gql`
    query docConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: DocFilter) {
  docConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...DocParts
      }
    }
  }
}
    ${DocPartsFragmentDoc}`;
export const PostDocument = gql`
    query post($relativePath: String!) {
  post(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PostParts
  }
}
    ${PostPartsFragmentDoc}`;
export const PostConnectionDocument = gql`
    query postConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PostFilter) {
  postConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PostParts
      }
    }
  }
}
    ${PostPartsFragmentDoc}`;
export const HomepageDocument = gql`
    query homepage($relativePath: String!) {
  homepage(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...HomepageParts
  }
}
    ${HomepagePartsFragmentDoc}`;
export const HomepageConnectionDocument = gql`
    query homepageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: HomepageFilter) {
  homepageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...HomepageParts
      }
    }
  }
}
    ${HomepagePartsFragmentDoc}`;
export const PagesDocument = gql`
    query pages($relativePath: String!) {
  pages(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PagesParts
  }
}
    ${PagesPartsFragmentDoc}`;
export const PagesConnectionDocument = gql`
    query pagesConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PagesFilter) {
  pagesConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PagesParts
      }
    }
  }
}
    ${PagesPartsFragmentDoc}`;
export const SidebarDocument = gql`
    query sidebar($relativePath: String!) {
  sidebar(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...SidebarParts
  }
}
    ${SidebarPartsFragmentDoc}`;
export const SidebarConnectionDocument = gql`
    query sidebarConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: SidebarFilter) {
  sidebarConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...SidebarParts
      }
    }
  }
}
    ${SidebarPartsFragmentDoc}`;
export const SettingsDocument = gql`
    query settings($relativePath: String!) {
  settings(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...SettingsParts
  }
}
    ${SettingsPartsFragmentDoc}`;
export const SettingsConnectionDocument = gql`
    query settingsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: SettingsFilter) {
  settingsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...SettingsParts
      }
    }
  }
}
    ${SettingsPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      doc(variables: DocQueryVariables, options?: C): Promise<{data: DocQuery, variables: DocQueryVariables, query: string}> {
        return requester<{data: DocQuery, variables: DocQueryVariables, query: string}, DocQueryVariables>(DocDocument, variables, options);
      },
    docConnection(variables?: DocConnectionQueryVariables, options?: C): Promise<{data: DocConnectionQuery, variables: DocConnectionQueryVariables, query: string}> {
        return requester<{data: DocConnectionQuery, variables: DocConnectionQueryVariables, query: string}, DocConnectionQueryVariables>(DocConnectionDocument, variables, options);
      },
    post(variables: PostQueryVariables, options?: C): Promise<{data: PostQuery, variables: PostQueryVariables, query: string}> {
        return requester<{data: PostQuery, variables: PostQueryVariables, query: string}, PostQueryVariables>(PostDocument, variables, options);
      },
    postConnection(variables?: PostConnectionQueryVariables, options?: C): Promise<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}> {
        return requester<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}, PostConnectionQueryVariables>(PostConnectionDocument, variables, options);
      },
    homepage(variables: HomepageQueryVariables, options?: C): Promise<{data: HomepageQuery, variables: HomepageQueryVariables, query: string}> {
        return requester<{data: HomepageQuery, variables: HomepageQueryVariables, query: string}, HomepageQueryVariables>(HomepageDocument, variables, options);
      },
    homepageConnection(variables?: HomepageConnectionQueryVariables, options?: C): Promise<{data: HomepageConnectionQuery, variables: HomepageConnectionQueryVariables, query: string}> {
        return requester<{data: HomepageConnectionQuery, variables: HomepageConnectionQueryVariables, query: string}, HomepageConnectionQueryVariables>(HomepageConnectionDocument, variables, options);
      },
    pages(variables: PagesQueryVariables, options?: C): Promise<{data: PagesQuery, variables: PagesQueryVariables, query: string}> {
        return requester<{data: PagesQuery, variables: PagesQueryVariables, query: string}, PagesQueryVariables>(PagesDocument, variables, options);
      },
    pagesConnection(variables?: PagesConnectionQueryVariables, options?: C): Promise<{data: PagesConnectionQuery, variables: PagesConnectionQueryVariables, query: string}> {
        return requester<{data: PagesConnectionQuery, variables: PagesConnectionQueryVariables, query: string}, PagesConnectionQueryVariables>(PagesConnectionDocument, variables, options);
      },
    sidebar(variables: SidebarQueryVariables, options?: C): Promise<{data: SidebarQuery, variables: SidebarQueryVariables, query: string}> {
        return requester<{data: SidebarQuery, variables: SidebarQueryVariables, query: string}, SidebarQueryVariables>(SidebarDocument, variables, options);
      },
    sidebarConnection(variables?: SidebarConnectionQueryVariables, options?: C): Promise<{data: SidebarConnectionQuery, variables: SidebarConnectionQueryVariables, query: string}> {
        return requester<{data: SidebarConnectionQuery, variables: SidebarConnectionQueryVariables, query: string}, SidebarConnectionQueryVariables>(SidebarConnectionDocument, variables, options);
      },
    settings(variables: SettingsQueryVariables, options?: C): Promise<{data: SettingsQuery, variables: SettingsQueryVariables, query: string}> {
        return requester<{data: SettingsQuery, variables: SettingsQueryVariables, query: string}, SettingsQueryVariables>(SettingsDocument, variables, options);
      },
    settingsConnection(variables?: SettingsConnectionQueryVariables, options?: C): Promise<{data: SettingsConnectionQuery, variables: SettingsConnectionQueryVariables, query: string}> {
        return requester<{data: SettingsConnectionQuery, variables: SettingsConnectionQueryVariables, query: string}, SettingsConnectionQueryVariables>(SettingsConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    const data = await client.request({
      query: doc,
      variables: vars,
    });

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "https://content.tinajs.io/1.4/content/9eaa0998-03a0-4fc3-af03-71901b9820ac/github/main", queries }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

  